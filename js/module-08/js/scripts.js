'Use strict'

// Task 1 

// const button = document.querySelector('.button');
// button.addEventListener('click', () => {
//   const content = parseInt(button.textContent) + 1;
//   button.textContent =+ content; 
// })




// Task 2

// const btn = document.querySelector('button');
// const calc = document.querySelector('.calc');
// const child = calc.children;

// const firstInp = child[1];
// const secondInp = child[3];
// let result = document.querySelector('.result');

// btn.addEventListener('click', () => {
//     result.textContent = parseInt(firstInp.value) + parseInt(secondInp.value);
// });




// Task 3

// const add = document.querySelector('.js-add');
// const sub = document.querySelector('.js-sub');
// let value = document.querySelector('js-value');
// const span = document.querySelector('.value');
// value = 0;


// add.addEventListener('click', () => {
//     value += 1;
//     if (value < 1) {
//         value = 0;
//         span.textContent = value;
//     } else {
//         span.textContent = value;
//     }
// });

// sub.addEventListener('click', () => {
//     value = value - 1;
//     if (value < 0) {
//         span.textContent = 0;
//     } else {
//         span.textContent = value;
//     }
// });


// Task 4

// const options = document.querySelector('.options');
// const button = document.querySelector('.btn');
// let result = document.querySelector('.result');

// const click = (event) => {
//     event.preventDefault();

//     let checked = options.querySelector('input:checked');
//     result.textContent += `${checked.parentNode.textContent}`;
// }


// Task 5

// const images = document.querySelector('.images');

// images.addEventListener('click', handleImgClicker);

// function handleImgClicker (event) {
//     event.preventDefault();

//     const target = event.target;
//     if (target.nodeName === 'IMG') {
//         alert(`this src: ${target.src}`)
//     } else {return};
// };


// Task 6

// const list = document.querySelector('.list');


// list.addEventListener('click', (target) => {
//     target = event.target;

//     if (target.nodeName === 'BUTTON') {
//         target.parentNode.remove();
//     } else {return null}
// });


// Task 7

// const inputs = document.querySelector('.inputs');

// inputs.addEventListener('change', (event) => {
//     event = event.target;
//     const checkLength = Number(event.dataset.length);

//     if(checkLength === event.value.length) {
//         event.style.outline = '1px solid green';
//     } else 
//     event.style.outline = '1px solid red';
// });

// Task 8

// const input = document.querySelector('.input');
// const text = document.querySelector('.input-value');

// input.addEventListener('focus', (event) => {
//   event = event.target;
//   console.log('Input is in focus!')
// });

// input.addEventListener('blur', (event) => {
//     event = event.target;
//     console.log('Input is unfocused!')
//   });

// input.addEventListener('input', (evt) => {
//   evt = evt.target;  
//   text.textContent = `Current input value: ` + input.value;
// });

// Homework 
// –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–∞–ª–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞.
  
//     <div class="image-gallery js-image-gallery">
//       <div class="fullview">
//         <!-- –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ preview -->
//         <img src="img/fullview-1.jpeg" alt="alt text 1">
//       </div>
//       <!-- li –±—É–¥–µ—Ç —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫. –≠—Ç–∏ 3 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ -->
//       <ul class="preview">
//         <li><img src="img/preview-1.jpeg" data-fullview="img/fullview-1.jpeg" alt="alt text 1"></li>
//         <li><img src="img/preview-2.jpeg" data-fullview="img/fullview-2.jpeg" alt="alt text 2"></li>
//         <li><img src="img/preview-3.jpeg" data-fullview="img/fullview-3.jpeg" alt="alt text 3"></li>
//       </ul>
//     </div>   
    
//     üîî –ü—Ä–µ–≤—å—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: https://monosnap.com/file/5rVeRM8RYD6Wq2Nangp7E4TkroXZx2
      
      
//     –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
      
//       - image-gallery –µ—Å—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–µ –∫–∞–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
    
//       - fullview —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ —É–≤–µ–ª–∏—á–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ preview, –∏
//         —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    
//       - preview —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –º–∞–ª–µ–Ω—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∞—Ç—Ä–∏–±—É—Ç data-fullview,
//         –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. preview –∏ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞—é—Ç—Å—è 
//         –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
        
//       - –ü—Ä–∏ –∫–ª–∏–∫–µ –≤ —ç–ª–µ–º–µ–Ω—Ç preview, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–º–µ–Ω–∏—Ç—å src —Ç–µ–≥–∞ img –≤–Ω—É—Ç—Ä–∏ fullview
//         –Ω–∞ url –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
        
//       - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞–∫—Ç–∏–≤–Ω—ã–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç preview.
        
//       - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.
      
//       - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ preview.
      
//       - –ü—Ä–∏ –∫–ª–∏–∫–µ, –≤—ã–±—Ä–∞–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ preview –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è.
      
//       - CSS-–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –∏–º–µ–Ω–∞ –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å.
      
      
//     üîî –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞–ª–µ–Ω—å–∫–∏–µ –∏ –±–æ–ª—å—à–∏–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–µ—Ä–≤–∏—Å–∞ https://www.pexels.com/, –≤—ã–±—Ä–∞–≤ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
//       —Ä–∞–∑–º–µ—Ä. –ü—É—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è preview –±—É–¥—É—Ç 320px –ø–æ —à–∏—Ä–∏–Ω–µ, –±–æ–ª—å—à–∏–µ –¥–ª—è fullview 1280px.
//       –ü–æ–¥–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π.
// */

// /*
//   –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º.
//   –ó–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–∏–º, –∏–ª–∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ.
// */
const galleryItems = [
    { preview: 'img/1.jpg', fullview: 'img/1F.jpg', alt: "alt text 1" },
    { preview: 'img/2.jpg', fullview: 'img/2F.jpg', alt: "alt text 2" },
    { preview: 'img/3.jpg', fullview: 'img/3F.jpg', alt: "alt text 3" },
    { preview: 'img/4.jpg', fullview: 'img/4F.jpg', alt: "alt text 4" },
    { preview: 'img/5.jpg', fullview: 'img/5F.jpg', alt: "alt text 5" },
    { preview: 'img/6.jpg', fullview: 'img/6F.jpg', alt: "alt text 6" },
  ];
  
document.addEventListener('DOMContentLoaded', () => {
    const gallery = document.querySelector('.image-gallery');
  
    const createFull = ({fullview, alt}) => {
        return `<div class="fullview"><img class="fullviewImg" src="${fullview}" alt="${alt}" width=1280 height=720></div>`
    };

    const previewItem = galleryItems.reduce((acc, {fullview, preview, alt}) =>
        acc + `<li class="preview__item"><img class="previewImg" src="${preview}" data-fullview="${fullview}" alt="${alt}" width=200 height=120></li>`, ""
    );
    const createPreviewItem = () => {
        return `<ul class='preview__list'>${previewItem}</ul>`
    };
    gallery.insertAdjacentHTML('afterbegin', createPreviewItem());
    gallery.insertAdjacentHTML('afterbegin', createFull(galleryItems[0]));

    const previewImg = gallery.querySelector('.previewImg');
    previewImg.classList.add('clickElem');
  
    gallery.lastElementChild.addEventListener('click', (event) => {
        event.preventDefault();
  
      if(event.target.nodeName !== 'IMG') return;
  
      const fullImg = gallery.querySelector('.fullviewImg');
      const datasetFullview = event.target.dataset.fullview;
      const altFullview = event.target.alt;
      
      fullImg.setAttribute('src', datasetFullview);
      fullImg.setAttribute('alt', altFullview);
  
      const clickElem = gallery.querySelector('.previewImg.clickElem');
      clickElem.classList.remove('clickElem');
      
      event.target.classList.add('clickElem');
    });
})  